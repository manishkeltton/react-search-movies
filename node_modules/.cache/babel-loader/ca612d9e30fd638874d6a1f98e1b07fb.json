{"ast":null,"code":"import _objectSpread from \"/var/www/html/react-movie-database/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/var/www/html/react-movie-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/react-movie-database/src/components/MainComponent.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Search from './Search';\nimport Results from './Results';\nimport Popup from './Popup';\n\nfunction MainComponent() {\n  const _useState = useState({\n    s: \"\",\n    results: [],\n    selected: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const apiurl = \"http://www.omdbapi.com/?apikey=dfe6d885\";\n  useEffect(() => {\n    axios.get(\"http://www.omdbapi.com/?apikey=dfe6d885&s=man\").then(({\n      data\n    }) => {\n      let results = data.Search;\n      setState(prevState => {\n        return _objectSpread({}, prevState, {\n          results: results\n        });\n      });\n    });\n  }, []);\n\n  const search = e => {\n    if (e.key === \"Enter\") {\n      axios(apiurl + \"&s=\" + state.s).then(({\n        data\n      }) => {\n        let results = data.Search;\n        setState(prevState => {\n          return _objectSpread({}, prevState, {\n            results: results\n          });\n        });\n      });\n    }\n  };\n\n  const handleInput = e => {\n    let s = e.target.value;\n    setState(prevState => {\n      return _objectSpread({}, prevState, {\n        s: s\n      });\n    });\n  };\n\n  const openPopup = id => {\n    axios(apiurl + \"&i=\" + id).then(({\n      data\n    }) => {\n      let result = data;\n      console.log(result);\n      setState(prevState => {\n        return _objectSpread({}, prevState, {\n          selected: result\n        });\n      });\n    });\n  };\n\n  const closePopup = () => {\n    setState(prevState => {\n      return _objectSpread({}, prevState, {\n        selected: {}\n      });\n    });\n  };\n\n  const suggestions = () => {};\n\n  const onSuggestionsFetchRequested = () => {};\n\n  const onSuggestionsClearRequested = () => {};\n\n  const getSuggestionValue = () => {};\n\n  const renderSuggestion = () => {};\n\n  const inputProps = () => {};\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Search Movies\")), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Search, {\n    suggestions: suggestion,\n    onSuggestionsFetchRequested: onSuggestionsFetchReq,\n    onSuggestionsClearRequested: onSuggestionsClearReq,\n    getSuggestionValue: getSuggestionValue,\n    renderSuggestion: renderSuggestion,\n    inputProps: inputProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Results, {\n    results: state.results,\n    openPopup: openPopup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), typeof state.selected.Title != \"undefined\" ? React.createElement(Popup, {\n    selected: state.selected,\n    closePopup: closePopup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }) : false));\n}\n\nexport default MainComponent;","map":{"version":3,"sources":["/var/www/html/react-movie-database/src/components/MainComponent.js"],"names":["React","useEffect","useState","axios","Search","Results","Popup","MainComponent","s","results","selected","state","setState","apiurl","get","then","data","prevState","search","e","key","handleInput","target","value","openPopup","id","result","console","log","closePopup","suggestions","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","inputProps","suggestion","onSuggestionsFetchReq","onSuggestionsClearReq","Title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,aAAT,GAAyB;AAAA,oBACGL,QAAQ,CAAC;AACjCM,IAAAA,CAAC,EAAE,EAD8B;AAEjCC,IAAAA,OAAO,EAAE,EAFwB;AAGjCC,IAAAA,QAAQ,EAAE;AAHuB,GAAD,CADX;AAAA;AAAA,QAChBC,KADgB;AAAA,QACTC,QADS;;AAMvB,QAAMC,MAAM,GAAG,yCAAf;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACW,GAAN,CAAU,+CAAV,EACCC,IADD,CACM,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAa;AACjB,UAAIP,OAAO,GAAGO,IAAI,CAACZ,MAAnB;AAEEQ,MAAAA,QAAQ,CAACK,SAAS,IAAI;AACpB,iCAAYA,SAAZ;AAAuBR,UAAAA,OAAO,EAAEA;AAAhC;AACD,OAFO,CAAR;AAGH,KAPD;AAQD,GATQ,EASP,EATO,CAAT;;AAWA,QAAMS,MAAM,GAAIC,CAAD,IAAO;AACpB,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBjB,MAAAA,KAAK,CAACU,MAAM,GAAG,KAAT,GAAiBF,KAAK,CAACH,CAAxB,CAAL,CAAgCO,IAAhC,CAAqC,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AACjD,YAAIP,OAAO,GAAGO,IAAI,CAACZ,MAAnB;AAEAQ,QAAAA,QAAQ,CAACK,SAAS,IAAI;AACpB,mCAAYA,SAAZ;AAAuBR,YAAAA,OAAO,EAAEA;AAAhC;AACD,SAFO,CAAR;AAGD,OAND;AAOD;AACF,GAVD;;AAYA,QAAMY,WAAW,GAAIF,CAAD,IAAO;AACzB,QAAIX,CAAC,GAAGW,CAAC,CAACG,MAAF,CAASC,KAAjB;AAEAX,IAAAA,QAAQ,CAACK,SAAS,IAAI;AACpB,+BAAYA,SAAZ;AAAuBT,QAAAA,CAAC,EAAEA;AAA1B;AACD,KAFO,CAAR;AAGD,GAND;;AAQA,QAAMgB,SAAS,GAAGC,EAAE,IAAI;AACtBtB,IAAAA,KAAK,CAACU,MAAM,GAAG,KAAT,GAAiBY,EAAlB,CAAL,CAA2BV,IAA3B,CAAgC,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAC5C,UAAIU,MAAM,GAAGV,IAAb;AAEAW,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEAd,MAAAA,QAAQ,CAACK,SAAS,IAAI;AACpB,iCAAYA,SAAZ;AAAuBP,UAAAA,QAAQ,EAAEgB;AAAjC;AACD,OAFO,CAAR;AAGD,KARD;AASD,GAVD;;AAYA,QAAMG,UAAU,GAAG,MAAM;AACvBjB,IAAAA,QAAQ,CAACK,SAAS,IAAI;AACpB,+BAAYA,SAAZ;AAAuBP,QAAAA,QAAQ,EAAE;AAAjC;AACD,KAFO,CAAR;AAGD,GAJD;;AAMA,QAAMoB,WAAW,GAAG,MAAM,CAAE,CAA5B;;AAEA,QAAMC,2BAA2B,GAAG,MAAM,CAAE,CAA5C;;AAEA,QAAMC,2BAA2B,GAAG,MAAM,CAAE,CAA5C;;AAEA,QAAMC,kBAAkB,GAAG,MAAM,CAAE,CAAnC;;AAEA,QAAMC,gBAAgB,GAAG,MAAM,CAAE,CAAjC;;AAEA,QAAMC,UAAU,GAAG,MAAM,CAAE,CAA3B;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAEC,UADf;AAEE,IAAA,2BAA2B,EAAEC,qBAF/B;AAGE,IAAA,2BAA2B,EAAEC,qBAH/B;AAIE,IAAA,kBAAkB,EAAEL,kBAJtB;AAKE,IAAA,gBAAgB,EAAEC,gBALpB;AAME,IAAA,UAAU,EAAEC,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAExB,KAAK,CAACF,OAAxB;AAAiC,IAAA,SAAS,EAAEe,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAaI,OAAOb,KAAK,CAACD,QAAN,CAAe6B,KAAtB,IAA+B,WAAhC,GAA+C,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAE5B,KAAK,CAACD,QAAvB;AAAiC,IAAA,UAAU,EAAEmB,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/C,GAA6G,KAbhH,CAJF,CADF;AAsBD;;AAED,eAAetB,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport Search from './Search'\nimport Results from './Results'\nimport Popup from './Popup'\n\nfunction MainComponent() {\n  const [state, setState] = useState({\n    s: \"\",\n    results: [],\n    selected: {}\n  });\n  const apiurl = \"http://www.omdbapi.com/?apikey=dfe6d885\";\n\n  useEffect(() => {\n    axios.get(\"http://www.omdbapi.com/?apikey=dfe6d885&s=man\")\n    .then(({ data }) =>{\n      let results = data.Search;\n\n        setState(prevState => {\n          return { ...prevState, results: results }\n        })\n    })\n  },[])\n\n  const search = (e) => {\n    if (e.key === \"Enter\") {\n      axios(apiurl + \"&s=\" + state.s).then(({ data }) => {\n        let results = data.Search;\n\n        setState(prevState => {\n          return { ...prevState, results: results }\n        })\n      });\n    }\n  }\n  \n  const handleInput = (e) => {\n    let s = e.target.value;\n\n    setState(prevState => {\n      return { ...prevState, s: s }\n    });\n  }\n\n  const openPopup = id => {\n    axios(apiurl + \"&i=\" + id).then(({ data }) => {\n      let result = data;\n\n      console.log(result);\n\n      setState(prevState => {\n        return { ...prevState, selected: result }\n      });\n    });\n  }\n\n  const closePopup = () => {\n    setState(prevState => {\n      return { ...prevState, selected: {} }\n    });\n  }\n\n  const suggestions = () => {}\n\n  const onSuggestionsFetchRequested = () => {}\n\n  const onSuggestionsClearRequested = () => {}\n\n  const getSuggestionValue = () => {}\n\n  const renderSuggestion = () => {}\n\n  const inputProps = () => {}\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Search Movies</h1>\n      </header>\n      <main>\n        {/* <Search handleInput={handleInput} search={search} /> */}\n        <Search\n          suggestions={suggestion}\n          onSuggestionsFetchRequested={onSuggestionsFetchReq}\n          onSuggestionsClearRequested={onSuggestionsClearReq}\n          getSuggestionValue={getSuggestionValue}\n          renderSuggestion={renderSuggestion}\n          inputProps={inputProps}\n        />        \n\n        <Results results={state.results} openPopup={openPopup} />\n\n        {(typeof state.selected.Title != \"undefined\") ? <Popup selected={state.selected} closePopup={closePopup} /> : false}\n      </main>\n    </div>\n  );\n}\n\nexport default MainComponent\n"]},"metadata":{},"sourceType":"module"}