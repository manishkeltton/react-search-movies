{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-movie-database/src/components/Search.js\";\nimport React from 'react';\n\nfunction Search({\n  handleInput,\n  search\n}) {\n  return React.createElement(\"section\", {\n    className: \"searchbox-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(Autosuggest, {\n    suggestions: suggestions,\n    onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n    onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n    getSuggestionValue: this.getSuggestionValue,\n    renderSuggestion: this.renderSuggestion,\n    inputProps: inputProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n}\n\nexport default Search; // import React from 'react';\n// import Autosuggest from 'react-autosuggest';\n// // import './autosuggest.css';\n// class ServerAutoSuggest extends React.Component {\n//     constructor() {\n//         super();\n//         //Define state for value and suggestion collection\n//         this.state = {\n//             value: '',\n//             suggestions: []\n//         };\n//     }\n//     // Filter logic\n//     getSuggestions = async (value) => {\n//         const inputValue = value.trim().toLowerCase();\n//         let response = await fetch(\"http://www.omdbapi.com/?s=\" + inputValue + \"&apikey=dfe6d885\");\n//         let data = await response.json()\n//         return data;\n//     };\n//     // Trigger suggestions\n//     getSuggestionValue = suggestion => suggestion.Title;\n//     // Render Each Option\n//     renderSuggestion = suggestion => (\n//         <span className=\"sugg-option\">\n//             {/* <span className=\"icon-wrap\"><img src={suggestion.Poster} /></span> */}\n//             <span className=\"name\">\n//                 {suggestion.Title}\n//             </span>\n//         </span>\n//     );\n//     // OnChange event handler\n//     onChange = (event, { newValue }) => {\n//         this.setState({\n//             value: newValue\n//         });\n//     };\n//     // Suggestion rerender when user types\n//     onSuggestionsFetchRequested = ({ value }) => {\n//         this.getSuggestions(value)\n//             .then(data => {\n//                 if (data.Error) {\n//                     this.setState({\n//                         suggestions: []\n//                     });\n//                 } else {\n//                     this.setState({\n//                         suggestions: data.Search\n//                     });\n//                 }\n//             })\n//     };\n//     // Triggered on clear\n//     onSuggestionsClearRequested = () => {\n//         this.setState({\n//             suggestions: []\n//         });\n//     };\n//     render() {\n//         const { value, suggestions } = this.state;\n//         // Option props\n//         const inputProps = {\n//             placeholder: 'Type movie name',\n//             value,\n//             onChange: this.onChange\n//         };\n//         // Adding AutoSuggest component\n//         return (\n//             <Autosuggest\n//                 suggestions={suggestions}\n//                 onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n//                 onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n//                 getSuggestionValue={this.getSuggestionValue}\n//                 renderSuggestion={this.renderSuggestion}\n//                 inputProps={inputProps}\n//             />\n//         );\n//     }\n// }\n// export default ServerAutoSuggest;","map":{"version":3,"sources":["/var/www/html/react-movie-database/src/components/Search.js"],"names":["React","Search","handleInput","search","suggestions","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","inputProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,CAAiB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAjB,EAA0C;AACzC,SACC;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQC,oBAAC,WAAD;AACa,IAAA,WAAW,EAAEC,WAD1B;AAEa,IAAA,2BAA2B,EAAE,KAAKC,2BAF/C;AAGa,IAAA,2BAA2B,EAAE,KAAKC,2BAH/C;AAIa,IAAA,kBAAkB,EAAE,KAAKC,kBAJtC;AAKa,IAAA,gBAAgB,EAAE,KAAKC,gBALpC;AAMa,IAAA,UAAU,EAAEC,UANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,CADD;AAmBA;;AAED,eAAeR,MAAf,C,CAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react'\n\nfunction Search ({ handleInput, search }) {\n\treturn (\n\t\t<section className=\"searchbox-wrap\">\n\t\t\t{/* <input \n\t\t\t\ttype=\"text\" \n\t\t\t\tplaceholder=\"Search for a movie...\" \n\t\t\t\tclassName=\"searchbox\" \n\t\t\t\tonChange={handleInput}\n\t\t\t\tonKeyPress={search}\n\t\t\t/> */}\n\t\t\t<Autosuggest\n                suggestions={suggestions}\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                getSuggestionValue={this.getSuggestionValue}\n                renderSuggestion={this.renderSuggestion}\n                inputProps={inputProps}\n            />\n\t\t</section>\n\t)\n}\n\nexport default Search\n\n\n// import React from 'react';\n// import Autosuggest from 'react-autosuggest';\n// // import './autosuggest.css';\n\n// class ServerAutoSuggest extends React.Component {\n//     constructor() {\n//         super();\n\n//         //Define state for value and suggestion collection\n//         this.state = {\n//             value: '',\n//             suggestions: []\n//         };\n//     }\n\n//     // Filter logic\n//     getSuggestions = async (value) => {\n//         const inputValue = value.trim().toLowerCase();\n//         let response = await fetch(\"http://www.omdbapi.com/?s=\" + inputValue + \"&apikey=dfe6d885\");\n//         let data = await response.json()\n//         return data;\n//     };\n\n//     // Trigger suggestions\n//     getSuggestionValue = suggestion => suggestion.Title;\n\n//     // Render Each Option\n//     renderSuggestion = suggestion => (\n//         <span className=\"sugg-option\">\n//             {/* <span className=\"icon-wrap\"><img src={suggestion.Poster} /></span> */}\n//             <span className=\"name\">\n//                 {suggestion.Title}\n//             </span>\n//         </span>\n//     );\n\n//     // OnChange event handler\n//     onChange = (event, { newValue }) => {\n//         this.setState({\n//             value: newValue\n//         });\n//     };\n\n//     // Suggestion rerender when user types\n//     onSuggestionsFetchRequested = ({ value }) => {\n//         this.getSuggestions(value)\n//             .then(data => {\n//                 if (data.Error) {\n//                     this.setState({\n//                         suggestions: []\n//                     });\n//                 } else {\n//                     this.setState({\n//                         suggestions: data.Search\n//                     });\n//                 }\n//             })\n//     };\n\n//     // Triggered on clear\n//     onSuggestionsClearRequested = () => {\n//         this.setState({\n//             suggestions: []\n//         });\n//     };\n\n//     render() {\n//         const { value, suggestions } = this.state;\n\n//         // Option props\n//         const inputProps = {\n//             placeholder: 'Type movie name',\n//             value,\n//             onChange: this.onChange\n//         };\n\n//         // Adding AutoSuggest component\n//         return (\n//             <Autosuggest\n//                 suggestions={suggestions}\n//                 onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n//                 onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n//                 getSuggestionValue={this.getSuggestionValue}\n//                 renderSuggestion={this.renderSuggestion}\n//                 inputProps={inputProps}\n//             />\n//         );\n//     }\n// }\n\n// export default ServerAutoSuggest;"]},"metadata":{},"sourceType":"module"}